import React, { useState } from "react";
import { useSignInEmailPassword } from "@nhost/nextjs";
import {
  Button,
  Checkbox,
  Grid,
  Input,
  Row,
  Text,
  Card,
  Spacer,
  Loading,
} from "@nextui-org/react";

import { useRouter } from "next/router";
import Head from "next/head";
import * as Yup from "yup";
import NavBar from "../../components/NavBar";
import LoginSvg from "../../components/UI/SVG/login";
import ForgotPassword from "../../components/ForgotPassword";
import toast, { Toaster } from "react-hot-toast";
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";

const schema = Yup.object({
  email: Yup.string()
    .email("Invalid email address")
    .required("Please enter your email"),
  password: Yup.string()
    .min(8, "Password must be 8 characters long")
    .required("Password is required"),
});

interface ILoginFormValues {
  email: string;
  password: string;
}

const Login = () => {
  const {
    register,
    handleSubmit,
    formState: { errors },
    reset,
  } = useForm<ILoginFormValues>({
    defaultValues: {
      email: "",
      password: "",
    },
    resolver: yupResolver(schema),
  });

  const {
    signInEmailPassword,
    isLoading,
    isSuccess,
    isError,
    error: errorMessage,
  } = useSignInEmailPassword();

  const router = useRouter();

  const handleOnSubmit = async (values: ILoginFormValues) => {
    try {
      await signInEmailPassword(values.email, values.password);
    } catch (error) {
      if (isError) {
        //@ts-ignore
        toast.error(errorMessage?.message);
        console.log("Error Caught");
      }
    }
  };

  if (isSuccess) {
    router.push("/all-meetups");
    return null;
  }

  return (
    <>
      <Toaster />
      <Head>
        <title>Let&apos;s Link | About</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NavBar />

      <Grid.Container gap={2} justify="center">
        <Grid xs={6} justify={"center"}>
          <Card css={{ justifyContent: "center", alignItems: "center" }}>
            <Card.Header css={{ justifyContent: "center", py: 30 }}>
              <Text h3> Login To Account</Text>
            </Card.Header>
            <form onSubmit={handleSubmit(handleOnSubmit)}>
              <Input
                clearable
                bordered
                fullWidth
                color="primary"
                size="lg"
                placeholder="Email"
                css={{ mt: 20 }}
                {...register("email")}
              />
              {errors.email ? (
                <Text color="error">{errors.email.message}</Text>
              ) : null}
              <Input
                clearable
                bordered
                fullWidth
                color="primary"
                size="lg"
                placeholder="Password"
                css={{ mt: 20 }}
                {...register("password")}
              />
              {errors.password ? (
                <Text color="error">{errors.password.message}</Text>
              ) : null}
              <Row justify="space-between" css={{ mt: 20 }}>
                <Checkbox>
                  <Text size={14}>Remember me</Text>
                </Checkbox>
                <ForgotPassword />
              </Row>
              <Row
                justify="center"
                css={{ flexDirection: "column", alignItems: "center" }}
              >
                <Button type="submit" color="secondary" shadow>
                  {isLoading ? (
                    <Row justify="space-evenly">
                      <Text color={"white"}>Logging In</Text>
                      <Spacer />
                      <Loading type="spinner" color={"white"} size="lg" />
                    </Row>
                  ) : (
                    "Login"
                  )}
                </Button>
                {isError ? (
                  <Text color="error">{errorMessage?.message}</Text>
                ) : null}
              </Row>
            </form>
            <Card.Footer css={{ justifyContent: "center", mt: 20 }}>
              Doesn&apos;t have an account?{"  "}
              <Text
                onClick={() => router.push("/auth/sign-up")}
                color="secondary"
                as={"span"}
                css={{ cursor: "pointer" }}
              >
                SignUp
              </Text>
            </Card.Footer>
          </Card>
        </Grid>
        <Grid xs={6}>
          <LoginSvg />
        </Grid>
      </Grid.Container>
    </>
  );
};

export default Login;
